var MQ,myMQeditor=function(b){var o={tabs:[{p:"Basic",enabled:!0,tabcontent:[{flow:"row",s:2,contents:[{l:"\\left(\\right)",c:"i",w:"()",pr:'<span class="mq-non-leaf"><span class="mq-scaled mq-paren" style="transform: scale(1, 1.2);">(</span><span class="mq-non-leaf mq-empty"></span><span class="mq-scaled mq-paren" style="transform: scale(1, 1.2);">)</span></span>'},{l:"x^{}",c:"t",w:"^",nb:1,pr:'<var>x</var><span class="mq-supsub mq-non-leaf mq-sup-only"><span class="mq-sup mq-empty"></span></span>'},{l:"\\pi",nb:1,pr:'<span class="mq-nonSymbola">π</span>'},{l:"\\sqrt{}",c:"c",w:"sqrt",nb:1,pr:'<span class="mq-non-leaf"><span class="mq-scaled mq-sqrt-prefix" style="transform: scale(1, 0.955556);">√</span><span class="mq-non-leaf mq-sqrt-stem mq-empty"></span></span>'},{l:"x_{}",c:"t",w:"_",nb:1,pr:'<var>x</var><span class="mq-supsub mq-non-leaf"><span class="mq-sub mq-empty"></span></span>'},{l:"\\sqrt[n]{}",c:"c",w:"nthroot",nb:1,pr:'<sup class="mq-nthroot mq-non-leaf"><var>n</var></sup><span class="mq-scaled"><span class="mq-sqrt-prefix mq-scaled" style="transform: scale(1, 0.955556);">√</span><span class="mq-sqrt-stem mq-non-leaf mq-empty"></span></span>'},{p:"DNE",sm:2},{l:"\\left|\\right|",c:"i",w:"||"}]},{s:.1},{flow:"row",s:4,contents:[{b:"7"},{b:"8"},{b:"9"},{l:"\\frac{}{}",c:"t",w:"/",pr:'<span class="mq-fraction mq-non-leaf"><span class="mq-numerator mq-empty"></span><span class="mq-denominator mq-empty"></span><span style="display:inline-block;width:0">&#8203;</span></span>'},{b:"4"},{b:"5"},{b:"6"},{b:"*"},{b:"1"},{b:"2"},{b:"3"},{b:"-"},{b:"0"},{b:"."},{s:1},{b:"+"}]},{s:.1},{flow:"row",s:2,contents:[{s:.5},{b:"&uarr;",c:"k",w:"Up"},{s:.5},{b:"&larr;",c:"k",w:"Left"},{b:"&rarr;",c:"k",w:"Right"},{s:.5},{b:"&darr;",c:"k",w:"Down"},{s:.5},{b:"&#x232B;",s:2,c:"k",w:"Backspace"}]}]},{p:"Funcs",enabled:!1,tabcontent:[{flow:"row",s:4,contents:[{l:"\\log",c:"f",op:1},{l:"\\ln",c:"f",op:1},{l:"\\log_{}",c:"f",pr:'<var class="mq-operator-name">log</var><span class="mq-supsub mq-non-leaf"><span class="mq-sub mq-empty"></span></span>'},{l:"e^{}",c:"t",w:"e^",pr:'<var>e</var><span class="mq-supsub mq-non-leaf mq-sup-only"><span class="mq-sup mq-empty"></span></span>'}]}]},{p:"Trig",enabled:!1,tabcontent:[{flow:"row",s:6,contents:[{l:"\\sin",c:"f",op:1},{l:"\\cos",c:"f",op:1},{l:"\\tan",c:"f",op:1},{l:"\\sec",c:"f",op:1},{l:"\\csc",c:"f",op:1},{l:"\\cot",c:"f",op:1},{l:"\\sin^{-1}",c:"f",pr:'<var class="mq-operator-name">sin</var><span class="mq-supsub mq-non-leaf mq-sup-only"><span class="mq-sup">−1</span></span>'},{l:"\\cos^{-1}",c:"f",pr:'<var class="mq-operator-name">cos</var><span class="mq-supsub mq-non-leaf mq-sup-only"><span class="mq-sup">−1</span></span>'},{l:"\\tan^{-1}",c:"f",pr:'<var class="mq-operator-name">tan</var><span class="mq-supsub mq-non-leaf mq-sup-only"><span class="mq-sup">−1</span></span>'},{l:"\\sinh",c:"f",op:1},{l:"\\cosh",c:"f",op:1},{l:"\\tanh",c:"f",op:1},{l:"\\pi",nb:1,pr:'<span class="mq-nonSymbola">π</span>'},{s:1},{s:4}]}]},{p:"Inequality",enabled:!1,tabcontent:[{flow:"row",s:4,contents:[{l:"\\lt",pr:'<span class="mq-binary-operator">&lt;</span>'},{l:"\\gt",pr:'<span class="mq-binary-operator">&gt;</span>'},{l:"\\le",pr:'<span class="mq-binary-operator">&le;</span>'},{l:"\\ge",pr:'<span class="mq-binary-operator">&ge;</span>'},{l:"\\ne",pr:'<span class="mq-binary-operator">&ne;</span>'},{p:"or",c:"w",w:"\\text{ or }"},{p:"DNE",sm:2},{p:"all reals",c:"w",w:"\\text{all reals}",sm:2}]}]},{p:"Interval",enabled:!1,tabcontent:[{flow:"row",s:4,contents:[{l:"\\left(\\right)",c:"i",w:"()"},{l:"\\left[\\right]",c:"i",w:"[]"},{l:"\\left(\\right]",c:"i",w:"(]"},{l:"\\left[\\right)",c:"i",w:"[)"},{l:"\\infty",pr:"<span>∞</span>"},{l:"-\\infty",c:"w",w:"-\\infty",pr:"<span>−∞</span>"},{l:"\\cup",pr:'<span class="mq-binary-operator">∪</span>'},{s:1}]}]},{p:"Matrix",sm:1,enabled:!1,tabcontent:[{flow:"row",s:4,contents:[{p:"2×2",c:"w",w:"\\begin{bmatrix}&\\\\&\\end{bmatrix}"},{p:"2×3",c:"w",w:"\\begin{bmatrix}&&\\\\&&\\end{bmatrix}"},{p:"3×3",c:"w",w:"\\begin{bmatrix}&&\\\\&&\\\\&&\\end{bmatrix}"},{p:"3×4",c:"w",w:"\\begin{bmatrix}&&&\\\\&&&\\\\&&&\\end{bmatrix}"},{p:"+Col",c:"m",w:"addColumn"},{p:"-Col",c:"m",w:"deleteColumn"},{p:"+Row",c:"m",w:"addRow"},{p:"-Row",c:"m",w:"deleteRow"}]}]},{p:"=<%",enabled:!0,tabcontent:[{flow:"row",s:5,contents:[{p:"[",s:.5},{p:"]",s:.5},{p:"{",s:.5},{p:"}",s:.5},{p:"(",s:.5},{p:")",s:.5},{l:"\\left\\langle\\right\\rangle",c:"i",w:["\\left\\langle","\\right\\rangle"]},{l:"\\left|\\right|",c:"i",w:"||"},{p:"="},{l:"\\lt",pr:'<span class="mq-binary-operator">&lt;</span>'},{l:"\\gt",pr:'<span class="mq-binary-operator">&gt;</span>'},{l:"\\le",pr:'<span class="mq-binary-operator">&le;</span>'},{l:"\\ge",pr:'<span class="mq-binary-operator">&ge;</span>'},{p:"%"},{p:","},{l:"\\infty",pr:"<span>∞</span>"},{p:"!"},{p:"?"}]}]},{p:"ABC",enabled:!0,tabcontent:[{flow:"row",s:10,contents:[{p:"q"},{p:"w"},{p:"e"},{p:"r"},{p:"t"},{p:"y"},{p:"u"},{p:"i"},{p:"o"},{p:"p"},{s:.5},{p:"a"},{p:"s"},{p:"d"},{p:"f"},{p:"g"},{p:"h"},{p:"j"},{p:"k"},{p:"l"},{s:.5},{b:"&#8679;",c:"shift",s:1.5},{p:"z"},{p:"x"},{p:"c"},{p:"v"},{p:"b"},{p:"n"},{p:"m"},{b:"&#x232B;",c:"k",w:"Backspace",s:1.5},{p:"%"},{p:","},{p:"Space",s:5,c:"t",w:" "},{p:"."},{b:"&larr;",c:"k",w:"Left"},{b:"&rarr;",c:"k",w:"Right"}]}]}]},m={tabs:[{p:"Basic",enabled:!0,tabcontent:[{flow:"row",s:5,contents:[{l:"\\frac{}{}",c:"t",w:"/",pr:'<span class="mq-fraction mq-non-leaf"><span class="mq-numerator mq-empty"></span><span class="mq-denominator mq-empty"></span><span style="display:inline-block;width:0">&#8203;</span></span>'},{l:"x^{}",c:"t",w:"^",nb:1,pr:'<var>x</var><span class="mq-supsub mq-non-leaf mq-sup-only"><span class="mq-sup mq-empty"></span></span>'},{l:"x_{}",c:"t",w:"_",nb:1,pr:'<var>x</var><span class="mq-supsub mq-non-leaf"><span class="mq-sub mq-empty"></span></span>'},{l:"\\sqrt{}",c:"c",w:"sqrt",nb:1,pr:'<span class="mq-non-leaf"><span class="mq-scaled mq-sqrt-prefix" style="transform: scale(1, 0.955556);">√</span><span class="mq-non-leaf mq-sqrt-stem mq-empty"></span></span>'},{l:"\\sqrt[n]{}",c:"c",w:"nthroot",nb:1,pr:'<sup class="mq-nthroot mq-non-leaf"><var>n</var></sup><span class="mq-scaled"><span class="mq-sqrt-prefix mq-scaled" style="transform: scale(1, 0.955556);">√</span><span class="mq-sqrt-stem mq-non-leaf mq-empty"></span></span>'},{l:"\\left(\\right)",c:"i",w:"()"},{l:"\\left|\\right|",c:"i",w:"||"},{l:"\\pi",nb:1,pr:'<span class="mq-nonSymbola">π</span>'},{l:"\\infty",pr:"<span>∞</span>"},{p:"DNE",sm:2}]},{s:.1},{flow:"row",s:2,contents:[{b:"&uarr;",c:"k",w:"Up"},{b:"&darr;",c:"k",w:"Down"},{b:"&larr;",c:"k",w:"Left"},{b:"&rarr;",c:"k",w:"Right"},{b:"&#x232B;",s:2,c:"k",w:"Backspace"}]}]},{p:"Funcs",enabled:!1,tabcontent:[{flow:"row",s:4,contents:[{l:"\\log",c:"f",op:1},{l:"\\ln",c:"f",op:1},{l:"\\log_{}",c:"f",pr:'<var class="mq-operator-name">log</var><span class="mq-supsub mq-non-leaf"><span class="mq-sub mq-empty"></span></span>'},{l:"e^{}",c:"t",w:"e^",pr:'<var>e</var><span class="mq-supsub mq-non-leaf mq-sup-only"><span class="mq-sup mq-empty"></span></span>'}]}]},{p:"Trig",enabled:!1,tabcontent:[{flow:"row",s:6,contents:[{l:"\\sin",c:"f",op:1},{l:"\\cos",c:"f",op:1},{l:"\\tan",c:"f",op:1},{l:"\\sec",c:"f",op:1},{l:"\\csc",c:"f",op:1},{l:"\\cot",c:"f",op:1},{l:"\\sin^{-1}",c:"f",pr:'<var class="mq-operator-name">sin</var><span class="mq-supsub mq-non-leaf mq-sup-only"><span class="mq-sup">−1</span></span>'},{l:"\\cos^{-1}",c:"f",pr:'<var class="mq-operator-name">cos</var><span class="mq-supsub mq-non-leaf mq-sup-only"><span class="mq-sup">−1</span></span>'},{l:"\\tan^{-1}",c:"f",pr:'<var class="mq-operator-name">tan</var><span class="mq-supsub mq-non-leaf mq-sup-only"><span class="mq-sup">−1</span></span>'},{l:"\\sinh",c:"f",op:1},{l:"\\cosh",c:"f",op:1},{l:"\\tanh",c:"f",op:1},{l:"\\pi",nb:1,pr:'<span class="mq-nonSymbola">π</span>'},{s:1},{s:4}]}]},{p:"Inequality",enabled:!1,tabcontent:[{flow:"row",s:4,contents:[{l:"\\lt",pr:'<span class="mq-binary-operator">&lt;</span>'},{l:"\\gt",pr:'<span class="mq-binary-operator">&gt;</span>'},{l:"\\le",pr:'<span class="mq-binary-operator">&le;</span>'},{l:"\\ge",pr:'<span class="mq-binary-operator">&ge;</span>'},{l:"\\ne",pr:'<span class="mq-binary-operator">&ne;</span>'},{p:"or",c:"w",w:"\\text{ or }"},{p:"DNE",sm:2},{p:"all reals",c:"w",w:"\\text{all reals}",sm:2}]}]},{p:"Interval",enabled:!1,tabcontent:[{flow:"row",s:4,contents:[{l:"\\left(\\right)",c:"i",w:"()"},{l:"\\left[\\right]",c:"i",w:"[]"},{l:"\\left(\\right]",c:"i",w:"(]"},{l:"\\left[\\right)",c:"i",w:"[)"},{l:"\\infty",pr:"<span>∞</span>"},{l:"-\\infty",c:"w",w:"-\\infty",pr:"<span>−∞</span>"},{l:"\\cup",pr:'<span class="mq-binary-operator">∪</span>'},{s:1}]}]},{p:"Matrix",sm:1,enabled:!1,tabcontent:[{flow:"row",s:4,contents:[{p:"2×2",c:"w",w:"\\begin{bmatrix}&\\\\&\\end{bmatrix}"},{p:"2×3",c:"w",w:"\\begin{bmatrix}&&\\\\&&\\end{bmatrix}"},{p:"3×3",c:"w",w:"\\begin{bmatrix}&&\\\\&&\\\\&&\\end{bmatrix}"},{p:"3×4",c:"w",w:"\\begin{bmatrix}&&&\\\\&&&\\\\&&&\\end{bmatrix}"},{p:"+Col",c:"m",w:"addColumn"},{p:"-Col",c:"m",w:"deleteColumn"},{p:"+Row",c:"m",w:"addRow"},{p:"-Row",c:"m",w:"deleteRow"}]}]}]};return{getLayout:function(a,s){var n,t,p,e,l=a.id.substring(8),r=b("#"+l),c=r.attr("data-mq-vars")||"";return c=""==c?[]:c.split(/,/),t=(n=r.attr("data-mq")).split(/,/)[0],p=[],"OSK"===s?(p=b.extend(!0,[],o),n.match(/\bdecimal/)&&"numfunc"!=t?(p.tabs[0].tabcontent[0].s=1,p.tabs[0].tabcontent[0].contents=[{l:"\\infty",pr:"<span>∞</span>"},{p:"DNE",sm:2}],p.tabs[0].tabcontent[2]={flow:"row",s:4,contents:[{b:"7"},{b:"8"},{b:"9"},{s:1},{b:"4"},{b:"5"},{b:"6"},{s:1},{b:"1"},{b:"2"},{b:"3"},{b:"-"},{b:"0"},{b:"."},n.match(/(list|set\b)/)||t.match(/(ntuple|interval)/)?{b:","}:{s:1},"calcntuple"===t&&!n.match(/vector/)||n.match(/point/)?{l:"\\left(\\right)",c:"t",w:"("}:{s:1}]}):n.match(/(fraction|mixednumber|fracordec)/)&&"numfunc"!=t?(p.tabs[0].tabcontent[0].s=1,p.tabs[0].tabcontent[0].contents=[{l:"\\frac{n}{}",c:"t",w:"/",pr:'<span class="mq-fraction mq-non-leaf"><span class="mq-numerator"><var>n</var></span><span class="mq-denominator mq-empty"></span><span style="display:inline-block;width:0">&#8203;</span></span>'},{l:"\\frac{}{}",c:"c",w:"\\frac",pr:'<span class="mq-fraction mq-non-leaf"><span class="mq-numerator mq-empty"></span><span class="mq-denominator mq-empty"></span><span style="display:inline-block;width:0">&#8203;</span></span>'},{l:"\\infty",pr:"<span>∞</span>"},{p:"DNE",sm:2}],p.tabs[0].tabcontent[2]={flow:"row",s:4,contents:[{b:"7"},{b:"8"},{b:"9"},{s:1},{b:"4"},{b:"5"},{b:"6"},{s:1},{b:"1"},{b:"2"},{b:"3"},{b:"-"},{b:"0"},n.match(/fracordec/)?{b:"."}:{s:1},n.match(/(list|set\b)/)||t.match(/(ntuple|interval)/)?{b:","}:{s:1},"calcntuple"===t&&!n.match(/vector/)||n.match(/point/)?{l:"\\left(\\right)",c:"t",w:"("}:t.match(/complex/)?{b:"+"}:{s:1}]}):(n.match(/(list|set\b)/)||t.match(/(interval|string|ntuple)/)?p.tabs[0].tabcontent[2].contents[14]={b:","}:n.match(/equation/)&&(p.tabs[0].tabcontent[2].contents[14]={b:"="}),n.match(/nodecimal/)&&(p.tabs[0].tabcontent[2].contents[13]={s:1})),n.match(/allowplusminus/)&&(p.tabs[6].tabcontent[0].contents[17]={l:"\\pm",pr:'<span class="mq-binary-operator">&plusmn;</span>'}),n.match(/inequality/)&&(p.tabs[3].p="Ineq")):(p=b.extend(!0,[],m),n.match(/\bdecimal/)?(p.tabs[0].tabcontent[0].s=3,p.tabs[0].tabcontent[0].contents=[{l:"\\infty",pr:"<span>∞</span>"},{p:"DNE",sm:2},"calcntuple"===t&&!n.match(/vector/)||n.match(/point/)?{l:"\\left(\\right)",c:"t",w:"("}:{s:1}]):n.match(/(fraction|mixednumber|fracordec)/)&&(p.tabs[0].tabcontent[0].s=4,p.tabs[0].tabcontent[0].contents=[{l:"\\frac{n}{}",c:"t",w:"/",pr:'<span class="mq-fraction mq-non-leaf"><span class="mq-numerator"><var>n</var></span><span class="mq-denominator mq-empty"></span><span style="display:inline-block;width:0">&#8203;</span></span>'},{l:"\\frac{}{}",c:"c",w:"\\frac",pr:'<span class="mq-fraction mq-non-leaf"><span class="mq-numerator mq-empty"></span><span class="mq-denominator mq-empty"></span><span style="display:inline-block;width:0">&#8203;</span></span>'},{l:"\\infty",pr:"<span>∞</span>"},{p:"DNE",sm:2}],("calcntuple"===t&&!n.match(/vector/)||n.match(/point/))&&p.tabs[0].tabcontent[0].contents.push({l:"\\left(\\right)",c:"t",w:"("},{s:3}))),"numfunc"==t&&n.match(/inequality/)&&(p.tabs[3].enabled=!0,p.tabs[3].tabcontent[0].contents.splice(5,3),p.tabs[3].tabcontent[0].s=5),n.match(/(fraction|mixednumber|fracordec|\bdecimal|logic|setexp|chemeqn)/)||(p.tabs[1].enabled=!0,n.match(/notrig/)||(p.tabs[2].enabled=!0,n.match(/allowdegrees/)&&(p.tabs[2].tabcontent[0].contents[13]={l:"\\degree"}))),t.match(/interval/)?n.match(/inequality/)?p.tabs[3].enabled=!0:p.tabs[4].enabled=!0:!t.match(/matrix/)&&!n.match(/matrix/)||n.match(/matrixsized/)?n.match(/set\b/)?p.tabs[0].tabcontent.unshift({flow:"row",s:1,contents:[{l:"\\lbrace{\\rbrace}",c:"i",w:["\\left\\{","\\right\\}"]}]},{s:.1}):t.match(/complex/)?p.tabs[0].tabcontent.unshift({flow:"row",s:1,contents:[{b:n.match(/allowjcomplex/)?"j":"i",v:1}]},{s:.1}):n.match(/vector/)&&p.tabs[0].tabcontent.unshift({flow:"row",s:1,contents:[{l:"\\left\\langle\\right\\rangle",c:"i",w:["\\left\\langle","\\right\\rangle"]}]},{s:.1}):p.tabs[5].enabled=!0,n.match(/logic/)&&(p.tabs[0].p="Logic",p.tabs[0].tabcontent[0].contents=[{l:"\\vee",pr:'<span class="mq-binary-operator">∨</span>'},{l:"\\wedge",pr:'<span class="mq-binary-operator">∧</span>'},{l:"\\oplus",pr:'<span class="mq-binary-operator">⊕</span>'},{l:"\\left(\\right)",c:"i",w:"()",pr:'<span class="mq-non-leaf"><span class="mq-scaled mq-paren" style="transform: scale(1, 1.2);">(</span><span class="mq-non-leaf mq-empty"></span><span class="mq-scaled mq-paren" style="transform: scale(1, 1.2);">)</span></span>'},{l:"\\neg",pr:"¬"},{b:"~"},{l:"\\implies",pr:'<span class="mq-binary-operator">⇒</span>'},{l:"\\iff",pr:'<span class="mq-binary-operator">⇔</span>'}],"OSK"!==s&&(p.tabs[0].tabcontent[0].s=4)),n.match(/setexp/)&&(p.tabs[0].p="Set Exp",p.tabs[0].tabcontent[0].contents=[{l:"\\cup",pr:'<span class="mq-binary-operator">∪</span>'},{l:"\\cap",pr:'<span class="mq-binary-operator">∩</span>'},{l:"\\^c",c:"w",pr:'<span class="mq-non-leaf mq-empty"></span><sup class="mq-binary-operator">c</sup>'},{l:"\\ominus",pr:'<span class="mq-binary-operator">⊖</span>'},{l:"\\left(\\right)",c:"i",w:"()",pr:'<span class="mq-non-leaf"><span class="mq-scaled mq-paren" style="transform: scale(1, 1.2);">(</span><span class="mq-non-leaf mq-empty"></span><span class="mq-scaled mq-paren" style="transform: scale(1, 1.2);">)</span></span>'}],"OSK"!==s&&(p.tabs[0].tabcontent[0].s=3)),"chemeqn"==t&&(p.tabs[0].tabcontent[0].contents=[{l:"x_{}",c:"t",w:"_",nb:1,pr:'<var>x</var><span class="mq-supsub mq-non-leaf"><span class="mq-sub mq-empty"></span></span>'},{l:"x^{}",c:"t",w:"^",nb:1,pr:'<var>x</var><span class="mq-supsub mq-non-leaf mq-sup-only"><span class="mq-sup mq-empty"></span></span>'},{l:"\\left(\\right)",c:"i",w:"()",pr:'<span class="mq-non-leaf"><span class="mq-scaled mq-paren" style="transform: scale(1, 1.2);">(</span><span class="mq-non-leaf mq-empty"></span><span class="mq-scaled mq-paren" style="transform: scale(1, 1.2);">)</span></span>'}],n.match(/reaction/)&&p.tabs[0].tabcontent[0].contents.push({l:"\\to",pr:'<span class="mq-binary-operator">→</span>'},{l:"\\rightleftharpoons",pr:'<span class="mq-binary-operator">⇌</span>'}),"OSK"!==s&&(p.tabs[0].tabcontent[0].s=3)),0<c.length&&("basic"==(e=function(a,s){var n,t,p,e,l,r,c;for(n=1,t=[],p="OSK"==s?4:2,l=0;l<a.length;l++){for(e=a[l].split(/_/),r=0;r<e.length;r++)e[r]=e[r].replace(/\b(alpha|beta|chi|delta|epsilon|gamma|varphi|phi|psi|sigma|rho|theta|lambda|mu|nu|omega|tau)\b/i,"\\$&");a[l]=e.join("_"),("\\"!=a[l].charAt(0)||1<e.length)&&a[l].length>n&&(n=a[l].length),a[l]=a[l].replace(/_(\w{2,})/,"_{$1}"),1==a[l].length?t.push({b:a[l],c:"w",v:1}):t.push({l:a[l].replace(/(\\)?([a-zA-Z0-9]{2,})/g,function(a,s,n){return s?a:"\\text{"+n+"}"}),w:a[l],c:"w",r:1})}return c=Math.min(8,Math.max(4,Math.ceil(a.length/4))),a.length%c!=0&&t.push({s:c-a.length%c}),{format:a.length<=p&&n<4?"basic":"tab",btns:t,perrow:c}}(c,s)).format?p.tabs[0].tabcontent.unshift({flow:"row",s:1,contents:e.btns},{s:.1}):p.tabs.splice(1,0,{p:"chemeqn"==t?"Atoms":"Vars",enabled:!0,tabcontent:[{flow:"row",s:e.perrow,contents:e.btns}]})),p},onShow:function(a,s,n){var t,p,e,l,r,c,o,m,i;n&&"under"===s?(t=a.id.substring(8),(p=b("#"+t))[0].hasAttribute("data-tip")&&(l=(e=b("#mqeditor .mqed-tabpanel").first()).children("div").last().position().left-12,r=p.attr("data-tip"),c=document.createElement("div"),b(c).html(r),p[0].hasAttribute("aria-describedby")&&(o=p[0].getAttribute("aria-describedby"),document.getElementById(o).textContent!=r&&(m=b("<a>",{href:"#",text:_("[more..]")}).on("click",function(a){return a.preventDefault(),b(a.target).parent().html(b("#"+o).html()),!1}),b(c).append(" ").append(m))),e.parent().css("height","auto").append(b("<div>",{width:l,class:"mqed-tipholder"}).append(c)))):n&&"OSK"===s&&(t=a.id.substring(8),(p=b("#"+t))[0].hasAttribute("data-tip")&&(i=t.substr(2).split(/-/)[0],reshrinkeh(a.id),showehdd(a.id,p[0].getAttribute("data-tip"),i)))},onBlur:function(){hideeh()},onResize:function(a,s){"OSK"===s&&updateehpos()},onTab:function(a,s,n){"under"===s&&(n.match(/mqeditor-0-tabpanel/)?b(".mqed-tipholder").show():b(".mqed-tipholder").hide())}}}(jQuery);MQeditor.setConfig({getLayout:myMQeditor.getLayout,onShow:myMQeditor.onShow,onBlur:myMQeditor.onBlur,onResize:myMQeditor.onResize,onTab:myMQeditor.onTab,toMQ:AMtoMQ,fromMQ:MQtoAM,onEdit:imathasAssess.syntaxCheckMQ,onEnter:imathasAssess.handleMQenter}),(MQ=MathQuill.getInterface(MathQuill.getInterface.MAX)).config({spaceBehavesLikeTab:!0,leftRightIntoCmdGoes:"up",supSubsRequireOperand:!0,charsThatBreakOutOfSupSub:"=<>",charsThatBreakOutOfSupSubVar:"+-(",charsThatBreakOutOfSupSubOp:"+-(",restrictMismatchedBrackets:!0,autoCommands:"pi theta root sqrt ^oo degree",autoParenOperators:!0,addCommands:{oo:["VanillaSymbol","\\infty ","&infin;"],xor:["VanillaSymbol","\\oplus ","&oplus;"],uu:["VanillaSymbol","\\cup ","&cup;"],nn:["VanillaSymbol","\\cap ","&cap;"],rightleftharpoons:["BinaryOperator","\\rightleftharpoons ","&rlhar;"]}});
