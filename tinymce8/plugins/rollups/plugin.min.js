//Creates some menu buttons to replicate the default menu items
//so toolbars can be used in place of the menubar
tinymce.PluginManager.add('rollups', function(editor, url) {
    
    // Register the Edit menu button
    editor.ui.registry.addMenuButton('myEdit', {
        text: 'Edit',
        fetch: function(callback) {
            var items = [
                {
                    type: 'menuitem',
                    text: 'Undo',
                    icon: 'undo',
                    onAction: function() {
                        editor.execCommand('Undo');
                    }
                },
                {
                    type: 'menuitem',
                    text: 'Redo',
                    icon: 'redo',
                    onAction: function() {
                        editor.execCommand('Redo');
                    }
                },
                {
                    type: 'separator'
                },
                {
                    type: 'menuitem',
                    text: 'Cut',
                    icon: 'cut',
                    onAction: function() {
                        editor.execCommand('Cut');
                    }
                },
                {
                    type: 'menuitem',
                    text: 'Copy',
                    icon: 'copy',
                    onAction: function() {
                        editor.execCommand('Copy');
                    }
                },
                {
                    type: 'menuitem',
                    text: 'Paste',
                    icon: 'paste',
                    onAction: function() {
                        editor.execCommand('Paste');
                    }
                },
                {
                    type: 'menuitem',
                    text: 'Paste as text',
                    icon: 'paste-text',
                    onAction: function() {
                        editor.execCommand('mceTogglePlainTextPaste');
                    }
                },
                {
                    type: 'separator'
                },
                {
                    type: 'menuitem',
                    text: 'Select all',
                    icon: 'select-all',
                    onAction: function() {
                        editor.execCommand('SelectAll');
                    }
                },
                {
                    type: 'separator'
                },
                {
                    type: 'menuitem',
                    text: 'Find and replace',
                    icon: 'search-replace',
                    onAction: function() {
                        editor.execCommand('SearchReplace');
                    }
                }
            ];
            callback(items);
        }
    });

    // Register the Insert menu button
    editor.ui.registry.addMenuButton('myInsert', {
        text: 'Insert',
        fetch: function(callback) {
            var items = [
                {
                    type: 'menuitem',
                    text: 'Media',
                    icon: 'embed',
                    onAction: function() {
                        editor.execCommand('mceMedia');
                    }
                },
                {
                    type: 'menuitem',
                    text: 'Link',
                    icon: 'link',
                    onAction: function() {
                        editor.execCommand('mceLink');
                    }
                },
                {
                    type: 'menuitem',
                    text: 'Image',
                    icon: 'image',
                    onAction: function() {
                        editor.execCommand('mceImage');
                    }
                },
                // Note: 'attach' and 'snippet' may need custom implementation
                // or plugins installed depending on your setup
                {
                    type: 'menuitem',
                    text: 'Attach File',
                    icon: 'attach',
                    onAction: function() {
                        editor.execCommand('mceAttachFile');
                    }
                },
                {
                    type: 'menuitem',
                    text: 'Snippet',
                    icon: 'code-sample',
                    onAction: function() {
                        // Custom implementation or codesample plugin needed
                        editor.execCommand('codesample');
                    }
                },
                {
                    type: 'separator'
                },
                {
                    type: 'menuitem',
                    text: 'Special character',
                    icon: 'character-count',
                    onAction: function() {
                        editor.execCommand('mceShowCharmap');
                    }
                },
                {
                    type: 'menuitem',
                    text: 'Anchor',
                    icon: 'bookmark',
                    onAction: function() {
                        editor.execCommand('mceAnchor');
                    }
                },
                {
                    type: 'menuitem',
                    text: 'Horizontal line',
                    icon: 'horizontal-rule',
                    onAction: function() {
                        editor.execCommand('InsertHorizontalRule');
                    }
                }
            ];
            callback(items);
        }
    });

    // Note: The styleselect button modification approach has changed in v8
    // You would need to customize the formats or use a different approach
    // depending on your specific needs for the removeformat functionality
});